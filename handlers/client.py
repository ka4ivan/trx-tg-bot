import smtplib
from email.mime.text import MIMEText

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.utils.deep_linking import get_start_link

from db_api import db_quick_commands as db_commands
from db_api.schemas.achievement import Achievement_model as Achievement
from db_api.schemas.bonus import Bonus_model as Bonus
from db_api.schemas.users import Users_model as users
from db_api.schemas.stats import Stats_model as Stats
from config import dp, bot, _
import keyboards as kb
import handlers.states as states
import callback.games
import handlers.admin
import handlers.say_hi
import handlers.pay_operations
import pandas as pd
from openpyxl import Workbook

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É Excel
wb = Workbook()
ws = wb.active

# –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
ws.append(['ID –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫–∞', '–î–∞—Ç–∞', '–í—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫', '–°–æ–æ–±—â–µ–Ω–∏–µ'])
#######################################################################################################################################
from language_middleware import get_lang
from settings import session


async def anti_flood(*args, **kwargs):
    m = args[0]
    await m.answer(_("–ù–µ —Ñ–ª—É–¥–∏ :) –û–¥–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Å–µ–∫—É–Ω–¥—É"))

#######################################################################################################################################


#######################################################################################################################################

async def send_email(message: types.Message):
    sender = "bot.management.trx@gmail.com"
    password = "dztaoaixiiljstqi"
    recipient_mod = await users.query.where(users.user_id == message.from_user.id).gino.first()
    recipient = recipient_mod.mail
    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.starttls()
    try:
        with open("gmail.html") as file:
            template = file.read()
    except IOError:
        return "The template file doesn't found!"

    try:
        server.login(sender, password)
        msg = MIMEText(template, "html")
        msg["From"] = sender
        msg["To"] = recipient
        msg["Subject"] = "Telegram TRX BOT registration confirmation"
        server.sendmail(sender, recipient, msg.as_string())
    except Exception as _ex:
        pass

#######################################################################################################################################



#######################################################################################################################################

@dp.message_handler(commands=["start"])
@dp.throttled(anti_flood, rate=1)
async def start_handler(message: types.Message):
    date_time = pd.Timestamp.now().strftime('%Y-%m-%d %H-%M-%S')
    date_time_save = pd.Timestamp.now().strftime('%Y-%m-%d')
    ws.append([message.from_user.id, date_time, f"{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username}", message.text])
    file_name = 'messages_' + date_time_save + '.xlsx'
    wb.save(f'logging/{file_name}')
    if message.chat.type == 'private':
        try:
            if (not await db_commands.select_user(message.from_user.id)):
                db_commands.register_user(message)
                start_command = message.text
                first_referrer_id = str(start_command[7:])
                if first_referrer_id != "":
                    if str(first_referrer_id) != str(message.from_user.id):
                        await users.update.values(first_referrer_id=int(first_referrer_id)).where(users.user_id == message.from_user.id).gino.status()
                        session.commit()
                        await db_commands.give_bonus_ref(message.from_user.id)
                        await message.answer(_('‚Ñπ –í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–ª–∏—Å—å –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—é, —Ç–æ–º—É –æ—Ç—Ä–∏–º—É—î—Ç–µ –±–æ–Ω—É—Å.\n\nü§ë–í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ : 2 trx'))
                        try:
                            second_referrer_id_mod = await users.query.where(users.user_id == int(first_referrer_id)).gino.first()
                            second_referrer_id = second_referrer_id_mod.first_referrer_id
                            if second_referrer_id_mod != "":
                                await users.update.values(second_referrer_id=int(second_referrer_id)).where(users.user_id == message.from_user.id).gino.status()
                                session.commit()
                            else:
                                pass
                        except:
                            pass
                        try:
                            third_referrer_id_mod = await users.query.where(users.user_id == int(second_referrer_id)).gino.first()
                            third_referrer_id = third_referrer_id_mod.first_referrer_id
                            if third_referrer_id != "":
                                await users.update.values(third_referrer_id=int(third_referrer_id)).where(users.user_id == message.from_user.id).gino.status()
                                session.commit()
                            else:
                                pass
                        except:
                            pass
                        try:
                            await db_commands.give_bonus_thi_ref(third_referrer_id)
                            await bot.send_message(third_referrer_id, f'‚Ñπ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{message.from_user.username} –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –±–æ—Ç–∞ –∑–∞ –≤–∞—à–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –ø–æ —Ç—Ä–µ—Ç—ñ–π –ª—ñ–Ω—ñ—ó.\n\nü§ë–í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ : 0.2 trx')
                        except:
                            pass
                        try:
                            await db_commands.give_bonus_sec_ref(second_referrer_id)
                            await bot.send_message(second_referrer_id, f'‚Ñπ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{message.from_user.username} –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –±–æ—Ç–∞ –∑–∞ –≤–∞—à–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –ø–æ –¥—Ä—É–≥—ñ–π –ª—ñ–Ω—ñ—ó.\n\nü§ë–í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ : 0.5 trx')
                        except:
                            pass
                        try:
                            await db_commands.give_bonus_ref(int(first_referrer_id))
                            await bot.send_message(first_referrer_id, f'‚Ñπ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{message.from_user.username} –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –±–æ—Ç–∞ –∑–∞ –≤–∞—à–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –ø–æ –ø–µ—Ä—à—ñ–π –ª—ñ–Ω—ñ—ó.\n\nü§ë–í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ : 1 trx')
                        except:
                            pass
                    else:
                        await message.answer(_('‚Ñπ –í–∏ –Ω–∞–º–∞–≥–∞–ª–∏—Å—å –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å –ø–æ –≤–ª–∞—Å–Ω–æ–º—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—ñ, —Ç–æ–º—É –≤–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ –±–µ–∑ –Ω—å–æ–≥–æ'))

            if (not await db_commands.select_user_bonus(message.from_user.id)):
                db_commands.register_user_bonus(message)
            if (not await db_commands.select_user_achievement(message.from_user.id)):
                db_commands.register_user_achievement(message)


            captcha_mod = await users.query.where(users.user_id == message.from_user.id).gino.first()
            captcha = captcha_mod.captcha
            if captcha != 1:
                await states.captcha.select_language.set()
                captcha_num = 633912
                await message.answer(f"üíª –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É | –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ | Choose the interface language üíª", reply_markup=kb.markup_select_language)

                @dp.message_handler(state=states.captcha.select_language)
                async def language(message: types.Message, state: FSMContext):
                    try:
                        if message.text == 'üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞':
                            await message.answer(f"üá∫üá¶ –í—ñ—Ç–∞—é\n\n–í–∏ –æ–±—Ä–∞–ª–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –º–æ–≤—É\n\n–ú–æ–≤—É –º–æ–∂–Ω–∞ –º—ñ–Ω—è—Ç–∏ –≤ –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç —É —Ä–æ–∑–¥—ñ–ª—ñ 'üÜò –¢–µ—Ö. –ü—ñ–¥—Ç—Ä–∏–º–∫–∞'", reply_markup=types.ReplyKeyboardRemove())
                            await message.answer(f"‚Ñπ –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —â–æ –≤–∏ –Ω–µ –±–æ—Ç\n\nüì® –í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –ø–æ—à—Ç—É")
                            await users.update.values(user_language='uk').where(users.user_id == message.from_user.id).gino.status()
                            session.commit()
                            await states.captcha.next()
                        elif message.text == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
                            await message.answer(f"üá∑üá∫ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é\n\n–£ –≤–∞—Å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n\n–Ø–∑—ã–∫ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤ —Ä–∞–∑–¥–µ–ª–µ \n\n'üÜò –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞'", parse_mode='html', reply_markup=types.ReplyKeyboardRemove())
                            await message.answer(f"‚Ñπ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —á—Ç–æ –≤—ã –Ω–µ –±–æ—Ç\n\nüì® –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É")
                            await users.update.values(user_language='ru').where(users.user_id == message.from_user.id).gino.status()
                            session.commit()
                            await states.captcha.next()
                        elif message.text == 'üá¨üáß English':
                            await message.answer(f"üá¨üáß Congratulations\n\n You have chosen English\n\n You can change the language at any time in the section \n\n'üÜò Support'", parse_mode='html', reply_markup=types.ReplyKeyboardRemove())
                            await message.answer(f"‚Ñπ Confirm that you are not a bot\n\nüì® Enter your email")
                            await users.update.values(user_language='en').where(users.user_id == message.from_user.id).gino.status()
                            session.commit()
                            await states.captcha.next()
                        else:
                            await message.answer(f"‚Ñπ –ù–µ–≤—ñ–¥–æ–º–∞ –º–æ–≤–∞! –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —è–∑—ã–∫! Unknown language!", reply_markup=kb.markup_select_language)
                            await message.answer(f"‚Ñπ \n\n–û–±–µ—Ä—ñ—Ç—å —ñ–∑ —Å–ø–∏—Å–∫—É –∑–Ω–∏–∑—É \n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–Ω–∏–∑—É \n\nChoose from the list below")
                    except:
                        await message.answer(f"‚Ñπ –ù–µ–≤—ñ–¥–æ–º–∞ –º–æ–≤–∞! –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —è–∑—ã–∫! Unknown language!", reply_markup=kb.markup_select_language)
                        await message.answer(f"‚Ñπ \n\n–û–±–µ—Ä—ñ—Ç—å —ñ–∑ —Å–ø–∏—Å–∫—É –∑–Ω–∏–∑—É \n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–Ω–∏–∑—É \n\nChoose from the list below")

                @dp.message_handler(state=states.captcha.type_mail)
                async def mail(message: types.Message, state: FSMContext):
                    await users.update.values(mail=message.text).where(users.user_id == message.from_user.id).gino.status()

                    await message.answer(_("‚úâ Check your email. Enter the code: üëá"))
                    await send_email(message=message)
                    await states.captcha.next()


                @dp.message_handler(state=states.captcha.type_captcha)
                async def type_captcha(message: types.Message, state: FSMContext):
                    try:
                        if message.text.isdigit():
                            if int(message.text) == captcha_num:
                                await message.answer(_('‚Ñπ –í–∏ –ø—Ä–æ–π—à–ª–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É'))
                                markup_phone = await kb.markup_phone(message)
                                await message.answer(_('–î–ª—è —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—å –í–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É üëá'), reply_markup=markup_phone)
                                await states.captcha.next()
                            else:
                                await message.answer(_('‚Ñπ –ö–∞–ø—á–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ'))
                                await message.answer(_('‚Ñπ –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —â–æ –≤–∏ –Ω–µ –±–æ—Ç'))
                        else:
                            await message.answer(_('‚Ñπ –ö–∞–ø—á–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ'))
                            await message.answer(_('‚Ñπ –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —â–æ –≤–∏ –Ω–µ –±–æ—Ç'))
                    except:
                        await message.answer(_('üö´ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ'))
                    if str(message.text) == '–í–≤–µ—Å—Ç–∏ —ñ–Ω—à—É –ø–æ—à—Ç—É' or message.text == "–í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é –ø–æ—á—Ç—É" or message.text == "Enter another mail":
                        await states.captcha.select_language.set()
                        await message.answer(_('üì® –í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –ø–æ—à—Ç—É'), reply_markup=types.ReplyKeyboardRemove())
                        await states.captcha.next()
                    else:
                        pass

                @dp.message_handler(content_types=types.ContentType.CONTACT, state=states.captcha.type_phone)
                async def phone(message: types.Message, state: FSMContext):
                    try:
                        phone = message.contact.phone_number
                        # if phone[0] == '+' and phone[1] == '3' and phone[2] == '8' or phone[0] == '3' and phone[1] == '8':
                        await users.update.values(phone=phone).where(users.user_id == message.from_user.id).gino.status()
                        await users.update.values(captcha=1).where(users.user_id == message.from_user.id).gino.status()
                        session.commit()
                        markup_start = await kb.markup_start(message)
                        await message.answer(_('‚Ñπ –í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–ª–∏—Å—å'), reply_markup=markup_start)
                        if message.from_user.first_name == None:
                            markup_start = await kb.markup_start(message)
                            await message.answer(_('–ü—Ä–∏–≤—ñ—Ç, <b><u>{last_name}</u></b>. üéâ –í—ñ—Ç–∞—î–º–æ —É –Ω–∞—à–æ–º—É –±–æ—Ç—ñ üéâ').format(last_name=message.from_user.last_name), parse_mode='html', reply_markup=markup_start)
                        elif message.from_user.last_name == None:
                            markup_start = await kb.markup_start(message)
                            await message.answer(_('–ü—Ä–∏–≤—ñ—Ç, <b><u>{first_name}</u></b>. üéâ –í—ñ—Ç–∞—î–º–æ —É –Ω–∞—à–æ–º—É –±–æ—Ç—ñ üéâ').format(first_name=message.from_user.first_name), parse_mode='html', reply_markup=markup_start)
                        elif message.from_user.first_name == None and message.from_user.last_name == None:
                            markup_start = await kb.markup_start(message)
                            await message.answer(_('–ü—Ä–∏–≤—ñ—Ç. üéâ –í—ñ—Ç–∞—î–º–æ —É –Ω–∞—à–æ–º—É –±–æ—Ç—ñ üéâ'), parse_mode='html', reply_markup=markup_start)
                        else:
                            markup_start = await kb.markup_start(message)
                            await message.answer(_('üëã –ü—Ä–∏–≤—ñ—Ç, <b><u>{full_name}</u></b>. üéâ –í—ñ—Ç–∞—î–º–æ —É –Ω–∞—à–æ–º—É –±–æ—Ç—ñ üéâ').format(full_name=message.from_user.first_name + ' ' + message.from_user.last_name), parse_mode='html', reply_markup=markup_start)
                        await message.answer(_('ü§î –û–±–µ—Ä—ñ—Ç—å –≤–∞—à –≤–∞—Ä—ñ–∞–Ω—Ç üí≠'))
                        await state.finish()
                        # else:
                        #     await state.finish()
                        #     await bot.send_message(message.from_user.id, f"üö´ –î–∞–Ω–∏–π –±–æ—Ç –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –¥–ª—è –£–ö–†–ê–á–ù–¶–Ü–í üö´")
                    except:
                        await message.answer(_(f"üö´ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–≤–µ–¥–µ–Ω–æ –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ"))
            else:
                ban_mod = await users.query.where(users.user_id == message.from_user.id).gino.first()
                ban = ban_mod.ban
                if ban == 0:
                    markup_start = await kb.markup_start(message)
                    await message.answer(_('üîù <b>–ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é</b>'), parse_mode='html', reply_markup=markup_start)
                    await message.answer(_('ü§î –û–±–µ—Ä—ñ—Ç—å –≤–∞—à –≤–∞—Ä—ñ–∞–Ω—Ç üí≠'))
                else:
                    await message.answer(_('‚ùó –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –ó–ê–ë–ê–ù–ï–ù–û !\n\nüí≠ –Ø–∫—â–æ –≤–∏–Ω–∏–∫–ª–∏ —è–∫—ñ—Å—å –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å —É —Ç–µ—Ö.–ø—ñ–¥—Ç—Ä–∏–º–∫—É: @Christooo1'), reply_markup=types.ReplyKeyboardRemove())

            @dp.message_handler(state=states.captcha.start)
            async def start_(message: types.Message, state: FSMContext):
                markup_start = await kb.markup_start(message)
                await message.answer(_('üîù <b>–ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é</b>'), parse_mode='html', reply_markup=markup_start)
                await message.answer(_('ü§î –û–±–µ—Ä—ñ—Ç—å –≤–∞—à –≤–∞—Ä—ñ–∞–Ω—Ç üí≠'))
                await state.finish()
        except:
            await message.answer(_('‚ùó –ë–æ—Ç —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –æ—Å–æ–±–∏—Å—Ç–æ, –Ω–µ –º–æ–∂–Ω–∞ –π–æ–≥–æ –¥–æ–±–∞–≤–ª—è—Ç–∏ –≤ –≥—Ä—É–ø–∏. –ü–æ—Å–ø—ñ–ª–∫—É–π—Ç–µ—Å—å –∑ –Ω–∏–º —Å–∞–º—ñ: @trx_games_bot\n–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ —ñ–Ω—à—ñ –ø—Ä–æ–±–ª–µ–º–∏, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ –Ω–∞—à–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: @Christooo1'))
    else:
        await message.answer(_('‚ùó –ë–æ—Ç —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –æ—Å–æ–±–∏—Å—Ç–æ, –Ω–µ –º–æ–∂–Ω–∞ –π–æ–≥–æ –¥–æ–±–∞–≤–ª—è—Ç–∏ –≤ –≥—Ä—É–ø–∏. –ü–æ—Å–ø—ñ–ª–∫—É–π—Ç–µ—Å—å –∑ –Ω–∏–º —Å–∞–º—ñ: @trx_games_bot\n–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ —ñ–Ω—à—ñ –ø—Ä–æ–±–ª–µ–º–∏, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ –Ω–∞—à–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: @Christooo1'))

#######################################################################################################################################



#######################################################################################################################################
@dp.message_handler(commands=["help"])
@dp.throttled(anti_flood, rate=1)
async def help_handler(message: types.Message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(_("üì∫ –ó–≤–µ—Ä–Ω—É—Ç–∏—Å—å —ñ–∑ –ø—Ä–æ–±–ª–µ–º–æ—é"), url="https://t.me/Christooo1"))
    await message.answer(_("‚Ñπ –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º–∏ –≤ –±–æ—Ç—ñ, —Å–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ –∫–æ–º–∞–Ω–¥—É: /start \n\nüë®‚Äçüîß –Ø–∫—â–æ –ø—Ä–æ–±–ª–µ–º–∞ –ª–∏—à–∏–ª–∞—Å—å, –Ω–∞–ø–∏—à—ñ—Ç—å –Ω–∞—à–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –≤—ñ–Ω –≤—Å–µ –≤–ª–∞–¥–Ω–∞—î:\nhttps://t.me/Christooo1"), reply_markup=markup)
#######################################################################################################################################




#######################################################################################################################################
@dp.message_handler(commands='list_wins')
@dp.throttled(anti_flood, rate=1)
async def list_wins_combo(message: types.Message):
    await bot.send_message(message.from_user.id, _('üìã –°–ø–∏—Å–æ–∫ –≤–∏–≥—Ä–∞—à–Ω–∏—Ö –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π —É –≥—Ä—ñ "–°–ª–æ—Ç–∏"'
                           '\n\n<b><i>x0Ô∏è‚É£.3Ô∏è‚É£ –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏</i></b>\n\n'
                           '<b>'
                           'üçá   BAR   BAR   |   üçã   BAR   BAR\n7Ô∏è‚É£   BAR   BAR   |   BAR   üçá   BAR\nüçá   üçá   BAR   |   '
                           'BAR   üçã   BAR\nBAR   7Ô∏è‚É£   BAR   |   BAR   BAR   üçá\nBAR   BAR   üçã   |   BAR   BAR   7Ô∏è‚É£\n'
                           'üçá   BAR   üçá   |   BAR   üçá   üçá\nüçã   üçá   üçá   |   7Ô∏è‚É£   üçá   üçá\nüçá   üçã   üçá   |   üçá   7Ô∏è‚É£   üçá\n'
                           'üçá   üçá   üçã   |   üçá   üçá   7Ô∏è‚É£\nüçã   üçã   BAR   |   üçã   üçã   üçá\nüçã   BAR   üçã   |   üçã   üçá   üçã\n'
                           'BAR   üçã   üçã   |   üçá   üçã   üçã\n7Ô∏è‚É£   üçã   üçã   |   üçã   7Ô∏è‚É£   üçã\nüçã   üçã   7Ô∏è‚É£   |   7Ô∏è‚É£   BAR   7Ô∏è‚É£\n'
                           '7Ô∏è‚É£   üçá   7Ô∏è‚É£   |   7Ô∏è‚É£   üçã   üçã\nBAR   7Ô∏è‚É£   7Ô∏è‚É£   |   üçá   7Ô∏è‚É£   7Ô∏è‚É£\nüçã   7Ô∏è‚É£   7Ô∏è‚É£'
                           '</b>'
                           '\n\n<b><i>x3Ô∏è‚É£ –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏</i></b>\n\n'
                           '<b>'
                           'BAR   BAR   BAR\nüçá   üçá   üçá\nüçã   üçã   üçã'
                           '</b>'
                           '\n\n<b><i>x5Ô∏è‚É£ –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏</i></b>\n\n'
                           '<b>'
                           '7Ô∏è‚É£   7Ô∏è‚É£   BAR\n7Ô∏è‚É£   7Ô∏è‚É£   üçá\n7Ô∏è‚É£   7Ô∏è‚É£   üçã'
                           '</b>'
                           '\n\n<b><i>x1Ô∏è‚É£5Ô∏è‚É£ –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏</i></b> - –î–ñ–ï–ö–ü–û–¢\n\n'
                           '7Ô∏è‚É£   7Ô∏è‚É£   7Ô∏è‚É£'), parse_mode='html')
#######################################################################################################################################



#######################################################################################################################################

@dp.message_handler(content_types=['text'])
@dp.throttled(anti_flood, rate=1)
async def text_message(message: types.Message):

    date_time = pd.Timestamp.now().strftime('%Y-%m-%d %H-%M-%S')
    date_time_save = pd.Timestamp.now().strftime('%Y-%m-%d')
    ws.append([message.from_user.id, date_time, f"{message.from_user.first_name} {message.from_user.last_name} @{message.from_user.username}", message.text])
    file_name = 'messages_' + date_time_save + '.xlsx'
    wb.save(f'logging/{file_name}')

    user = await users.query.where(users.user_id == message.from_user.id).gino.first()
    ban = user.ban
    if ban == 0:
        if (message.text == "üéØ –Ü–≥—Ä–∏ üéÆ" or message.text == "üéØ –ò–≥—Ä—ã üéÆ" or message.text == "üéØ Games üéÆ"):
            markup_games = await kb.markup_games(message)
            await message.answer(_('‚Ñπ –°–ø–∏—Å–æ–∫ —ñ–≥–æ—Ä üëÄ'), reply_markup=markup_games)
        elif (message.text == "üõ© –ö—Ä–∞—à" or message.text == "üõ© Crash"):
            markup_crush_buy = await kb.markup_crush_buy(message)
            await bot.send_message(message.chat.id, _("üïπ –ì—Ä–∞ '<i><b>üõ© –ö—Ä–∞—à</b></i>'\n\n <i>üì¢ –ü—Ä–∞–≤–∏–ª–∞</i>:\n–ó—Ä–æ–±—ñ—Ç—å —Å—Ç–∞–≤–∫—É. –ü—ñ—Å–ª—è —Å—Ç–∞–≤–∫–∏, –≤–∏–ª–µ—Ç–∏—Ç—å –ª—ñ—Ç–∞–∫ —è–∫–∏–π –≤ –ª—é–±—É —Ö–≤–∏–ª–∏–Ω—É –º–æ–∂–µ —Ä–æ–∑–±–∏—Ç–∏—Å—å. –í–∞—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤—á–∞—Å–Ω–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '‚¨á –ó–∞–±—Ä–∞—Ç–∏', –¥–æ —Ç–æ–≥–æ —è–∫ –≤—ñ–Ω —Ä–æ–∑—ñ–±'—î—Ç—å—Å—è —ñ –≤–∏ –≤—Ç—Ä–∞—Ç–∏—Ç–µ –≤—Å—ñ –≥—Ä–æ—à—ñ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ñ –Ω–∞ —Å—Ç–∞–≤–∫—É\n\nüíé –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ —Å—Ç–∞–≤–∫–∏ <b><i>1</i></b> TRX\n\n–©–æ–± –≤–∏–π—Ç–∏ –∑ –≥—Ä–∏  /cancel \n\nüèÜ –ü—Ä–∏–∑ –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É:\n\n–ú–Ω–æ–∂–∏—Ç–µ–ª—å –≤–∏–≥—Ä–∞—à—É –±—É–¥–µ —Ä–æ—Å—Ç–∏ –ø–æ–∫–∏ –ª—ñ—Ç–∞–∫ –ª—ñ—Ç–∞—î(–≤—ñ–Ω —Ä–æ—Å—Ç–µ –∑—ñ —à–≤–∏–¥–∫—ñ—Å—Ç—é <u><i><b>+0.2—Ö</b></i></u> –≤ —Å–µ–∫—É–Ω–¥—É)"), reply_markup=markup_crush_buy, parse_mode='html')
        elif (message.text == "üî¢ –í–≥–∞–¥–∞–π —á–∏—Å–ª–æ" or message.text == "üî¢ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ" or message.text == "üî¢ Guess the number"):
            await bot.send_message(message.chat.id, _('üïπ –ì—Ä–∞ "<i><b>–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ</b></i>"\n\n <i>üì¢ –ü—Ä–∞–≤–∏–ª–∞</i>:\n–î–ª—è –ø–æ—á–∞—Ç–∫—É –≥—Ä–∏ –æ–±—Ä–µ—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å —á–∏—Å–µ–ª. –£ –±—É–¥—å-—è–∫—ñ–π –∫—ñ–ª—å–∫–æ—Å—Ç—ñ, –ø—Ä–∞–≤–∏–ª—å–Ω–µ —á–∏—Å–ª–æ –±—É–¥–µ –≤—Å—å–æ–≥–æ –æ–¥–Ω–µ(!), –ø—Ä–æ—Ç–µ –±—É–¥—É—Ç—å —Ä–æ—Å—Ç–∏ —ñ –Ω–∞–≥–æ—Ä–æ–¥–∏. –ó—Ä–æ–±—ñ—Ç—å —Å—Ç–∞–≤–∫—É. –ü—ñ—Å–ª—è —Å—Ç–∞–≤–∫–∏, –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º, –±—É–¥–µ –æ–±—Ä–∞–Ω–µ —á–∏—Å–ª–æ. –í–∞—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤—ñ–¥–≥–∞–¥–∞—Ç–∏ –∑–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ\n–î–ª—è —Ç–æ–≥–æ —â–æ–± –≥—Ä–∞—Ç–∏ –≤ –≥—Ä—É, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —â–æ–± –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç—ñ –±—É–ª–æ –±—ñ–ª—å—à–µ <i>1 TRX</i>!!!\n\nüíé –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ —Å—Ç–∞–≤–∫–∏ <b><i>1</i></b> TRX\n\n–©–æ–± –≤–∏–π—Ç–∏ –∑ –≥—Ä–∏  /cancel \n\nüèÜ –ü—Ä–∏–∑ –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É:\n\n5Ô∏è‚É£ –ß–∏—Å–µ–ª - <u><i><b>x4.95</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏\n\n1Ô∏è‚É£0Ô∏è‚É£ –ß–∏—Å–µ–ª - <u><i><b>x9.9</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏\n\n1Ô∏è‚É£0Ô∏è‚É£0Ô∏è‚É£ –ß–∏—Å–µ–ª - <u><i><b>x95</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏'), reply_markup=kb.markup_guess_select, parse_mode='html')
        elif (message.text == "üåó 50/50"):
            await bot.send_message(message.chat.id, _('üïπ –ì—Ä–∞ "<i><b>50/50</b></i>"\n\n <i>üì¢ –ü—Ä–∞–≤–∏–ª–∞</i>:\n–ó—Ä–æ–±—ñ—Ç—å —Å—Ç–∞–≤–∫—É. –ü—ñ—Å–ª—è —Å—Ç–∞–≤–∫–∏, –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º, –±—É–¥–µ –æ–±—Ä–∞–Ω–µ —á–∏—Å–ª–æ. –í–∞—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤—ñ–¥–≥–∞–¥–∞—Ç–∏ –∑–∞–≥–∞–¥–∞–Ω–µ —á–∏—Å–ª–æ, –∑ —ñ–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—é –ø–µ—Ä–µ–º–æ–≥–∏ 50%\n\n–î–ª—è —Ç–æ–≥–æ —â–æ–± –≥—Ä–∞—Ç–∏ –≤ –≥—Ä—É, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —â–æ–± –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç—ñ –±—É–ª–æ –±—ñ–ª—å—à–µ <i>1 TRX</i>!!!\n\nüíé –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ —Å—Ç–∞–≤–∫–∏ <b><i>1</i></b> TRX\n\n–©–æ–± –≤–∏–π—Ç–∏ –∑ –≥—Ä–∏  /cancel \n\nüèÜ –ü—Ä–∏–∑ –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É:\n\n2Ô∏è‚É£ —á–∏—Å–ª–∞\n<u><i><b>x1.95</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏\n\n4Ô∏è‚É£ —á–∏—Å–ª–∞\n<u><i><b>x1.95</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏\n<u><i><b>x3.9</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏. –Ø–∫—â–æ –¥–≤–∞ –∑–∞–≥–∞–¥–∞–Ω—ñ —á–∏—Å–ª–∞ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å'), reply_markup=kb.markup_fifty_select, parse_mode='html')
        elif (message.text == "üé≤ –ö—É–±–∏–∫" or message.text == "üé≤ Dice"):
            markup_dice_select = await kb.markup_dice_select(message)
            await bot.send_message(message.chat.id, _('üïπ –ì—Ä–∞ "<i><b>–ö—É–±–∏–∫</b></i>"\n\n <i>üì¢ –ü—Ä–∞–≤–∏–ª–∞</i>:\n–ó—Ä–æ–±—ñ—Ç—å —Å—Ç–∞–≤–∫—É —Ç–∞ –æ–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç –≤–∏–ø–∞–¥–∞–Ω–Ω—è –∫—É–±–∏–∫–∞. \n\nüé≤ –ë—ñ–ª—å—à–µ/–º–µ–Ω—à–µ 7Ô∏è‚É£: –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–≥–∞–¥–∞—Ç–∏ —è–∫–∏–º —á–∏–Ω–æ–º –≤–∏–ø–∞–¥—É—Ç—å –¥–≤–∞ –∫—É–±–∏–∫–∞\n\nüé≤ –ö–ª–∞—Å–∏—á–Ω–∏–π –∫—É–±–∏–∫: –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–≥–∞–¥–∞—Ç–∏ —è–∫–µ —á–∏—Å–ª–æ –≤–∏–ø–∞–¥–µ –Ω–∞ –∫—É–±–∏–∫—É\n\nüíé –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ —Å—Ç–∞–≤–∫–∏ <b><i>1</i></b> TRX\n\n–©–æ–± –≤–∏–π—Ç–∏ –∑ –≥—Ä–∏  /cancel \n\nüèÜ –ü—Ä–∏–∑ –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É:\n\nüé≤ –ë—ñ–ª—å—à–µ/–º–µ–Ω—à–µ 7Ô∏è‚É£\n<u><i><b>x2</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏ - –ë—ñ–ª—å—à–µ <i><b>7</b></i>\n<u><i><b>x5.8</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏ - <i><b>7</b></i>\n<u><i><b>x2</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏ - –ú–µ–Ω—à–µ <i><b>7</b></i>\n\nüé≤ –ö–ª–∞—Å–∏—á–Ω–∏–π –∫—É–±–∏–∫\n <u><i><b>x5.8</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏'), reply_markup=markup_dice_select, parse_mode='html')
        elif (message.text == "üí£ –°–∞–ø–µ—Ä" or message.text == "üí£ –°–∞–ø—ë—Ä" or message.text == "üí£ Minesweeper"):
            await bot.send_message(message.chat.id, _('üïπ –ì—Ä–∞ "<i><b>–°–∞–ø–µ—Ä</b></i>"\n\n <i>üì¢ –ü—Ä–∞–≤–∏–ª–∞</i>:\n–ó—Ä–æ–±—ñ—Ç—å —Å—Ç–∞–≤–∫—É —Ç–∞ –æ–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç –≥—Ä–∏ —ñ–∑ –ø–µ–≤–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –±–æ–º–± –Ω–∞ –ø–æ–ª—ñ. –Ü–≥—Ä–æ–≤–∞ –∑–æ–Ω–∞ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —ñ–∑ 9 –ø–æ–ª—ñ–≤(3*3), –≤ —è–∫–∏—Ö –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–µ–≤–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–æ–º–±, –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –≤–∏–¥—É –≥—Ä–∏\n\nüíé –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ —Å—Ç–∞–≤–∫–∏ <b><i>1</i></b> TRX\n\n–©–æ–± –≤–∏–π—Ç–∏ –∑ –≥—Ä–∏  /cancel \n\nüèÜ –ü—Ä–∏–∑ –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É:\n\n3Ô∏è‚É£ –±–æ–º–±–∏ - <u><i><b>x1.7</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏\n\n5Ô∏è‚É£ –±–æ–º–± - <u><i><b>x2</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏\n\n7Ô∏è‚É£ –±–æ–º–± - <u><i><b>x4.5</b></i></u> –≤—ñ–¥ —Å—Ç–∞–≤–∫–∏'), reply_markup=kb.markup_miner_select, parse_mode='html')
        elif (message.text == "üé∞ –°–ª–æ—Ç–∏" or message.text == "üé∞ –°–ª–æ—Ç—ã" or message.text == "üé∞ Slots"):
            markup_spin_select = await kb.markup_spin_select(message)
            await bot.send_message(message.chat.id, _('üïπ –ì—Ä–∞ "<i><b>–°–ª–æ—Ç–∏</b></i>"\n\n<i>üì¢ –ü—Ä–∞–≤–∏–ª–∞</i>:\n–ó—Ä–æ–±—ñ—Ç—å —Å—Ç–∞–≤–∫—É. –ü—ñ—Å–ª—è —á–æ–≥–æ –±—É–¥–µ –∫—Ä—É—Ç–∏—Ç–∏—Å—å –±–∞—Ä–∞–±–∞–Ω —ñ–∑ —Å–ª–æ—Ç–∞–º–∏. –í–∞—à –≤–∏–≥—Ä–∞—à –±—É–¥–µ –∑–∞–ª–µ–∂–∞—Ç–∏ –≤—ñ–¥ —Ç–æ–≥–æ, —è–∫–∞ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—è –≤–∏–ø–∞–ª–∞ –Ω–∞ –±–∞—Ä–∞–±–∞–Ω—ñ.\n\nüíé –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ —Å—Ç–∞–≤–∫–∏ <b><i>1</i></b> TRX\n\n–©–æ–± –≤–∏–π—Ç–∏ –∑ –≥—Ä–∏  /cancel \n\nüèÜ –ü—Ä–∏–∑ –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É:\n\n–í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó —è–∫–∞ –≤–∏–ø–∞–ª–∞ –Ω–∞ –±–∞—Ä–∞–±–∞–Ω—ñ.\n\nüìã –°–ø–∏—Å–æ–∫ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π –º–æ–∂–Ω–∞ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ç—É—Ç: <b><i>/list_wins</i></b>'), reply_markup=markup_spin_select, parse_mode='html')
        elif (message.text == "üé´ –í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å –≤ –ª–æ—Ç–µ—Ä–µ—ó" or message.text == "üé´ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –ª–æ—Ç–µ—Ä–µ–µ" or message.text == "üé´ Take part in the lottery"):
            markup_lot_buy = await kb.markup_lot_buy(message)
            await bot.send_message(message.chat.id, 'üé´ –ü–æ–¥—ñ—è "<i><b>–õ–æ—Ç–µ—Ä–µ—è</b></i>"\n\n <i>üì¢ –ü—Ä–∞–≤–∏–ª–∞</i>:\n\n–õ–æ—Ç–µ—Ä–µ—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ –¥–µ–Ω—å. –í—Å—å–≥–æ —î 100 –±—ñ–ª–µ—Ç—ñ–≤, –ø–æ —Ü—ñ–Ω—ñ –∑–∞ –æ–¥–∏–Ω - 15 TRX. –ü—Ä–∏ –∫—É–ø—ñ–≤–ª—ñ –≤—Å—ñ—Ö —Å—Ç–∞ –±—ñ–ª–µ—Ç—ñ–≤(–∞–±–æ —è–∫—â–æ –≤–∏–π—à–æ–≤ —á–∞—Å), –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —Ä–æ–∑—ñ–≥—Ä–∞—à, –¥–µ –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å –∑–∞–±–µ—Ä–µ 85% –≤—ñ–¥ –≤—Å—ñ—î—ó —Å—É–º–∏\n\nüèÜ –ü—Ä–∏–∑ –∑–∞ –ø–µ—Ä–µ–º–æ–≥—É:\n\n1 –±—ñ–ª–µ—Ç(15 TRX)\n<u><i><b>85%</b></i></u> –≤—ñ–¥ –≤—Å—ñ—î—ó —Å—É–º–∏', reply_markup=markup_lot_buy, parse_mode='html')
        elif (message.text == "üì¶ –ö–µ–π—Å–∏" or message.text == "üì¶ –ö–µ–π—Å—ã" or message.text == "üì¶ Cases"):
            await bot.send_message(message.chat.id, _('üïπ –ì—Ä–∞ "<i><b>–ö–µ–π—Å–∏</b></i>"\n\n <i>üì¢ –ü—Ä–∞–≤–∏–ª–∞</i>:\n–û–±–µ—Ä—ñ—Ç—å –∫–µ–π—Å —Ç–∞ –≤—ñ–¥–∫—Ä–∏–π—Ç–µ –π–æ–≥–æ. –í—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–µ–π—Å–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≥—Ä–æ—à–æ–≤–∏–π –ø—Ä–∏–∑, —è–∫–∏–π –º–æ–∂–µ –±—É—Ç–∏ —è–∫ –±—ñ–ª—å—à–∏–π, —Ç–∞–∫ —ñ –º–µ–Ω—à–∏–π –≤—ñ–¥ –≤–∞—Ä—Ç–æ—Å—Ç—ñ —Å–∞–º–æ–≥–æ –∫–µ–π—Å–∞\n\n–©–æ–± –≤–∏–π—Ç–∏ –∑ –≥—Ä–∏  /cancel \n\nüéõ –í–∏–¥–∏ –∫–µ–π—Å—ñ–≤:\n\nüì¶ - üí≥ –í–∞—Ä—Ç—ñ—Å—Ç—å: 10 TRX\n        üèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: <u><i><b>5-15 TRX</b></i></u>\n\nüéí - üí≥ –í–∞—Ä—Ç—ñ—Å—Ç—å: 100 TRX\n        üèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: <u><i><b>50-150 TRX</b></i></u>\n\nüíº - üí≥ –í–∞—Ä—Ç—ñ—Å—Ç—å: 500 TRX\n        üèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: <u><i><b>0-1000 TRX</b></i></u>'), reply_markup=kb.markup_select_cases, parse_mode='html')
        elif (message.text == "üÜò –¢–µ—Ö. –ü—ñ–¥—Ç—Ä–∏–º–∫–∞") or (message.text == "üÜò –¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞") or (message.text == "üÜò Tech. Support"):
            markup = types.InlineKeyboardMarkup(row_width=1)
            change_language = types.InlineKeyboardButton('üîÑ \n\n–ü–æ–º—ñ–Ω—è—Ç–∏ –º–æ–≤—É | –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ | Change the language', callback_data="change_language")
            up_button = types.InlineKeyboardButton(_("üì∫ –ó–≤'—è–∑–∞—Ç–∏—Å—å —ñ–∑ —Ç–µ—Ö. –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é"), url="https://t.me/Christooo1")
            markup.add(change_language, up_button)
            photo = open('img/what-is-bot-management.png', 'rb')
            await bot.send_photo(message.from_user.id, photo, caption=_('–ü—Ä–∏ –±—É–¥—å-—è–∫–∏—Ö –ø–∏—Ç–∞–Ω–Ω—è—Ö –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ –Ω–∞—à–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: @Christooo1'), reply_markup=markup, parse_mode='html')
        elif (message.text == "üîô –ù–∞–∑–∞–¥") or (message.text == "üîô Back"):
            markup_start = await kb.markup_start(message)
            await message.answer(_('üîù <b>–ì–æ–ª–æ–≤–Ω–µ –ú–µ–Ω—é</b>'), parse_mode='html', reply_markup=markup_start)
            await message.answer(_('ü§î –û–±–µ—Ä—ñ—Ç—å –≤–∞—à –≤–∞—Ä—ñ–∞–Ω—Ç üí≠'))
        elif (message.text == "üë§ –ü–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∞" or message.text == "üë§ –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞" or message.text == "üë§ Affiliate program"):
            link = await get_start_link(message.from_user.id)
            photo = open('img/ref.jpg', 'rb')
            count_first = await db_commands.count_first_ref(message.from_user.id)
            if count_first == None:
                count_first = 0
            count_second = await db_commands.count_second_ref(message.from_user.id)
            if count_second == None:
                count_second = 0
            count_third = await db_commands.count_third_ref(message.from_user.id)
            if count_third == None:
                count_third = 0
            count_all = int(count_first) + int(count_second) + int(count_third)
            if count_all == None:
                count_all = 0
            await bot.send_photo(message.from_user.id, photo, caption='üë• –ü–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ TRON\n\n‚Ñπ –ó–∞—Ä–æ–±–ª—è–π—Ç–µ TRX –Ω–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤.\n\nü§ë –ë–æ–Ω—É—Å –ø–æ –ª—ñ–Ω—ñ—è—Ö:\n1 –ª—ñ–Ω—ñ—è ‚Äì 1 TRX\n2 –ª—ñ–Ω—ñ—è ‚Äì 0.6 TRX\n3 –ª—ñ–Ω—ñ—è ‚Äì 0.2 TRX\n\nüìå –©–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –±–æ–Ω—É—Å –¥—ñ–ª—ñ—Ç—å—Å—è —Å–≤–æ—ó–º –ø–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –∑—ñ —Å–≤–æ—ó–º–∏ –¥—Ä—É–∑—è–º–∏.\n\n‚ñ∂ –ü–∞—Ä—Ç–Ω–µ—Ä—Å—å–∫–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: {}\n\nüë• –í–∞—à—ñ –ø–∞—Ä—Ç–Ω–µ—Ä–∏:\n‚ûñ –ü–µ—Ä—à–∞ –ª—ñ–Ω—ñ—è: {}\n‚ûñ –î—Ä—É–≥–∞ –ª—ñ–Ω—ñ—è: {}\n‚ûñ –¢—Ä–µ—Ç—è –ª—ñ–Ω—ñ—è: {}\n\n üöÄ –í—Å—å–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤: {}' .format(link, count_first, count_second, count_third, count_all), parse_mode='html')
        elif (message.text == "üéÅ BONUS"):
            photo = open('img/bonus_img.jpg', 'rb')
            markup_bonus = await kb.markup_bonus(message)
            await bot.send_photo(message.from_user.id, photo, caption=_("ü§î –û–±–µ—Ä–∏ –≤–∏–¥ –±–æ–Ω—É—Å—É üëÄ"), reply_markup=markup_bonus, parse_mode='html')
        elif (message.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ TRON" or message.text == "üìä TRON statistics"):
            stats_db = await Stats.query.gino.first()
            all_acc = stats_db.all_acc
            day_acc = stats_db.day_acc
            active_acc = stats_db.active_acc
            pay_trx = stats_db.pay_trx
            photo = open('img/stat_img.jpg', 'rb')
            await bot.send_photo(message.from_user.id, photo, caption=_("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—î–∫—Ç—É(–æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è –∫–æ–∂–Ω—ñ 24 –≥–æ–¥)\n\nüë• –ê—É–¥–∏—Ç–æ—Ä—ñ—è: <code>{}</code>\nüë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 24 –≥–æ–¥: <code>{}</code>\nüë§ –ê–∫—Ç–∏–≤–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ: <code>{}</code>\n–í–∏–ø–ª–∞—á–µ–Ω–æ TRX - <code>{}</code>").format(all_acc, day_acc, active_acc, pay_trx), parse_mode='html')
        elif (message.text == "üó£ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å —ñ—Å—Ç–æ—Ä—ñ—î—é/–º—É–∑–∏–∫–æ—é" or message.text == "üó£ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∏—Å—Ç–æ—Ä–∏–µ–π/–º—É–∑—ã–∫–æ–π" or message.text == "üó£ Share a story/music"):#üëã –ü–µ—Ä–µ–¥–∞—Ç–∏ –≤—Å—ñ–º –ø—Ä–∏–≤—ñ—Ç
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(_("üëã –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—Å—ñ–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"), callback_data='say_hi_inline'))
            await bot.send_message(message.from_user.id, text=_("üìã –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∫–∞–±—ñ–Ω–µ—Ç—É:\n\n‚Ñπ  –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–∫–∏ <i>¬´üëã –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –≤—Å—ñ–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è¬ª</i>, –≤–∏ –∑–º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –¥–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –∞–±–æ –∂ –¥–æ–¥–∞—Ç–∏ –º—É–∑–∏—á–Ω–∏–π —Ñ–∞–π–ª —è–∫–∏–π, –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –ø–æ–±–∞—á–∞—Ç—å —ñ –ø–æ—á—É—é—Ç—å –≤—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –±–æ—Ç–∞\n\n<b>–í–∞—Ä—Ç—ñ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</b> \n\nüí≥ 1 –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è(–¢–µ–∫—Å—Ç): <u><b><i>50 TRX</i></b></u>\nüí≥ 1 –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è(–§–æ—Ç–æ): <u><b><i>60 TRX</i></b></u>\nüí≥ 1 –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è(–ú—É–∑–∏–∫–∞): <u><b><i>60 TRX</i></b></u>\nüí≥ 1 –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è(–§–æ—Ç–æ + –ú—É–∑–∏–∫–∞): <u><b><i>80 TRX</i></b></u>\n\nüë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º - @Christooo1"), reply_markup=markup, parse_mode='html')
        elif (message.text == "ü§ë –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ 1.000 TRX" or message.text == "ü§ë –ü–æ–ª—É—á–∏—Ç—å –¥–æ 1.000 TRX" or message.text == "ü§ë Get up to 1.000 TRX"):
            markup = types.InlineKeyboardMarkup(row_width=1)
            up_button = types.InlineKeyboardButton(_("üì∫ –ì—É–≥–ª —Ñ–æ—Ä–º–∞"), url="https://docs.google.com/forms/d/e/1FAIpQLSf30jE_aWUzq81I9gAnZMnPRhW-63AnEJ8soUMTIPjUo7XHVQ/viewform?usp=sf_link")
            markup.add(up_button)
            photo = open('img/thousend_trx.jpg', 'rb')
            await bot.send_photo(message.from_user.id, photo, caption=_("üé• –ó–Ω—ñ–º–∏ –≤—ñ–¥–µ–æ –Ω–∞ <i><b>YouTube/Tiktok</b></i> –æ–≥–ª—è–¥ –Ω–∞ –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞ —ñ –≤—ñ–¥–ø—Ä–∞–≤ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ <a href='https://docs.google.com/forms/d/e/1FAIpQLSf30jE_aWUzq81I9gAnZMnPRhW-63AnEJ8soUMTIPjUo7XHVQ/viewform?usp=sf_link'><i><b>–ì—É–≥–ª —Ñ–æ—Ä–º—É</b></i></a> —ñ –æ—Ç—Ä–∏–º–∞–π –¥–æ 1 000 TRX! \n\n   ‚û° –í—ñ–¥–µ–æ –Ω–∞ Youtube –º–∞—î –±—É—Ç–∏ –≤—ñ–¥ 60 —Å–µ–∫—É–Ω–¥/TikTok –º–∞—é—Ç—å –±—É—Ç–∏ –≤–∫–∞–∑–∞–Ω—ñ —Ö–µ—à-—Ç–µ–≥–∏ ' –∑–∞—Ä–æ–±—ñ—Ç–æ–∫,—Ö–∞–ª—è–≤–∞,—Ä–æ–∑–¥–∞—á–∞,–±–µ–∑ –≤–∫–ª–∞–¥–µ–Ω—å,–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞,—ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó' \n\n   ‚û° –í –æ–ø–∏—Å—ñ –ø—ñ–¥ –≤—ñ–¥–µ–æ –º–∞—î –±—É—Ç–∏ –≤–∞—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ –≤–∞—à id"), reply_markup=markup, parse_mode='html')
        elif (message.text == "üì± –†–µ–∫–ª–∞–º–Ω–∏–π –∫–∞–±—ñ–Ω–µ—Ç" or message.text == "üì± –†–µ–∫–ª–∞–º–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" or message.text == "üì± Advertising office"):
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(_("üì∫ –ó–≤'—è–∑–∞—Ç–∏—Å—å –ø–æ –ø–∏—Ç–∞–Ω–Ω—è–º —Ä–µ–∫–ª–∞–º–∏"), url="https://t.me/Christooo1"))
            await bot.send_message(message.from_user.id, text=_("üìã –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫–∞–±—ñ–Ω–µ—Ç—É:\n\n‚Ñπ  –ó–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–∫–∏ <i>¬´üì∫ –ó–≤'—è–∑–∞—Ç–∏—Å—å –ø–æ –ø–∏—Ç–∞–Ω–Ω—è–º —Ä–µ–∫–ª–∞–º–∏¬ª</i>, –≤–∏ –∑–º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —Å–≤—ñ–π –∫–∞–Ω–∞–ª –≤ –Ω–∞—à–æ–≥–æ –±–æ—Ç–∞, –∞–±–æ –∂ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–∞–Ω–µ—Ä–Ω–∏–π –ø–æ—Å—Ç\n\n<b>–í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∞—à–æ–≥–æ –∫–∞–Ω–∞–ª—É –≤ –±–æ—Ç–∞</b> \n\nüí≥1 —Ç–∏–∂–¥–µ–Ω—å: 50 USDT TRC20 \nüí≥1 –º—ñ—Å—è—Ü—å: 160 USDT TRC20\n\n<b>–í–∞—Ä—Ç—ñ—Å—Ç—å –±–∞–Ω–µ—Ä–Ω–æ–≥–æ –ø–æ—Å—Ç–∞:</b>\n\nüí≥1 –ø–æ—Å—Ç: 10 USDT TRC20\nüí≥3 –ø–æ—Å—Ç: 25 USDT TRC20\n\nüë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–µ–∫–ª–∞–º—ñ - @Christooo1"), reply_markup=markup, parse_mode='html')
        elif (message.text == "‚ù§ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –±–æ—Ç–∞" or message.text == "‚ù§ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –±–æ—Ç–∞" or message.text == "‚ù§ Support the bot"):
            await bot.send_message(message.from_user.id, text=_('–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–æ—Å—Ç—ñ –±–æ—Ç–∞\n‚ù§Ô∏è‚Äçüî•–ú–∏ –ø—Ä–∞—Ü—é—î–º–æ —Ç—ñ–ª—å–∫–∏ –∑–∞–≤–¥—è–∫–∏ –≤–∞–º —Ç–∞ –∑–∞–¥–ª—è –≤–∞—Å\n\n–†–µ–∫–≤—ñ–∑–∏—Ç–∏ (–∂–º—è–∫–Ω–∏ –ø–æ –Ω—å–æ–º—É):\n\nüí±BTC: <code>bc1qup63zllhsn9vmzwn2atm2jp6wwldhkn0h7yxau</code>\n\nüíµUSDT Tether20: <code>TQDtxNHBv7aHvQgNKGJryQ4PB8j2dToTKS</code>\n\nüåº –¢–∞–∫–æ–∂ –≤—Å—ñ –±–∞–∂–∞—é—á—ñ, –º–æ–∂—É—Ç—å –Ω–∞—Å –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞ –Ω–∞—à–æ–º—É <code>Patreon</code> —Ç–∞ <code>Boosty</code>. –î–µ—Ç–∞–ª—å–Ω—ñ—à–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø–æ –∫–Ω–æ–ø—Ü—ñ: \n"üÖø –ù–∞—à Patreon and üÖ± Boosty"\n\n–¢—ñ —Ö—Ç–æ –Ω–∞—Å –ø—ñ–¥—Ç—Ä–∏–º–∞–ª–∏:\n\n–ú–æ–∂—É—Ç—å –∑–∞–º–æ–≤–∏—Ç–∏ –±–∞–Ω–µ—Ä (—Ç–µ–∫—Å—Ç —ñ —Ñ–æ—Ç–æ –ø–æ –±–∞–∂–∞–Ω–Ω—é) —è–∫–∏–π –ø–æ–±–∞—á–∞—Ç—å –≤—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ'), parse_mode='html')
        elif (message.text == "üÖø –ù–∞—à Patreon and üÖ± Boosty" or message.text == "üÖø Our Patreon and üÖ± Boosty"):
            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(types.InlineKeyboardButton("üÖø Patreon", url="patreon.com/TelegramTRXBot"), types.InlineKeyboardButton("üÖ± Boosty", url="https://boosty.to/telegramtrxbot"))
            photo = open('img/patreon.png', 'rb')
            await bot.send_photo(message.from_user.id, photo, caption=_("üí° –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –Ω–∞—à Patreon i Boosty\n\n–ù–∞ Patreon i Boosty —î —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–∞—à–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞. –í–∏ –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç–∏ –Ω–∞—à–∏–º –ø–∞—Ç—Ä–æ–Ω–æ–º —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É. –ß–∏–º –≤–∏—â–µ –≤–∞—à —Ä—ñ–≤–µ–Ω—å –≤ Patreon —Ç–∏–º –±—ñ–ª—å—à—ñ —É –≤–∞—Å –±—É–¥—É—Ç—å —Ç–∞–º –ø—Ä–∏–≤—ñ–ª–µ–≥—ñ–π\n\nüî± –ö–æ–∂–µ–Ω –Ω–∞—à –ø–∞—Ç—Ä–æ–Ω –æ—Ç—Ä–∏–º—É—î:\n\n<i>‚ûñ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –æ—Ç—Ä–∏–º—É—î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—É –≤—ñ–¥–∑–Ω–∞–∫—É\n‚ûñ –î–æ—Å—Ç—É–ø –¥–æ –∑–∞–∫—Ä–∏—Ç–æ—ó —Ç–≥ –≥—Ä—É–ø–∏\n‚ûñ –£–Ω—ñ–∫–∞–ª—å–Ω—ñ –ø—Ä–æ–º–æ–∫–æ–¥–∏\n‚ûñ –†—ñ–∑–Ω—ñ —ñ–≤–µ–Ω—Ç–∏ –∑ —ñ–≥—Ä–∞–º–∏ —É –±–æ—Çi\n‚ûñ –ü–µ—Ä—ñ–æ–¥–∏—á–Ω—ñ –∑–Ω–∏–∂–∫–∏\n‚ûñ –í—ñ–∫—Ç–æ—Ä–∏–Ω–∏ \n‚ûñ –¢–∞ –±–∞–≥–∞—Ç–æ —á–æ–≥–æ —ñ–Ω—à–æ–≥–æ...</i>\n\nüîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –Ω–∞—à <b>Patreon</b>:  patreon.com/TelegramTRXBot\nüîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –Ω–∞—à <b>Boosty</b>:  boosty.to/telegramtrxbot"), parse_mode='html', reply_markup=markup)
        elif (message.text == "üì≥ –ú—ñ–π –∫–∞–±—ñ–Ω–µ—Ç" or message.text == "üì≥ –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç" or message.text == "üì≥ My account"):
            bal_trx = user.bal_trx
            await users.update.values(bal_trx=round(bal_trx, 2)).where(users.user_id == message.from_user.id).gino.status()
            user = await users.query.where(users.user_id == message.from_user.id).gino.first()
            bal_usd = user.bal_usd
            bal_trx = user.bal_trx
            user_id = user.user_id
            join_date = user.join_date
            user_level = user.user_level
            patron = user.patron
            first_ref = await db_commands.count_first_ref(user_id)
            second_ref = await db_commands.count_second_ref(user_id)
            third_ref = await db_commands.count_third_ref(user_id)
            all_ref = await db_commands.count_first_ref(user_id) + await db_commands.count_second_ref(user_id) + await db_commands.count_third_ref(user_id)
            photo = open('img/my_cab.jpg', 'rb')
            if patron == 0:
                patron = '‚ùåüòû'
            else:
                patron = '„Ä∞   üëë   „Ä∞'
            markup_cab = await kb.markup_cab(message)
            await bot.send_photo(message.from_user.id, photo, caption=_("üì± –ú—ñ–π –∫–∞–±—ñ–Ω–µ—Ç\nüîë –ú—ñ–π ID: {}\n\nüèÖ –†—ñ–≤–µ–Ω—å –∞–∫–∫–∞—É–Ω—Ç—É:<u>____<b><i>{}</i></b>____</u>\n\nüÖø –ù–∞—à –ø–∞—Ç—Ä–æ–Ω:   {}\n\nüí≥ –ë–∞–ª–∞–Ω—Å: <b><u>{}</u></b> USDT TRC20 | <b><u>{}</u></b> TRX\nüë§ –ü–µ—Ä—à–∏–π –≤—Ö—ñ–¥: {}\n\nüöÄ –í—Å—å–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤: {}\n‚ûñ 1 –ª—ñ–Ω—ñ—è: {}\n‚ûñ 2 –ª—ñ–Ω—ñ—è: {}\n‚ûñ 3 –ª—ñ–Ω—ñ—è: {}").format(user_id, user_level, patron, bal_usd, bal_trx, str(join_date)[:16], all_ref, first_ref, second_ref, third_ref), reply_markup=markup_cab, parse_mode='html')

        elif (message.text == "üèÜ –î–æ—Å—è–≥–Ω–µ–Ω–Ω—è" or message.text == "üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è" or message.text == "üèÜ Achievements"):
            achievement = await Achievement.query.where(Achievement.user_id == message.from_user.id).gino.first()

            daily_bonus = achievement.daily_bonus
            pay_trx = achievement.pay_trx
            c_daily_bonus = achievement.c_daily_bonus
            c_pay_trx = achievement.c_pay_trx
            pay_trx_th = achievement.pay_trx_th
            c_pay_trx_th = achievement.c_pay_trx_th
            c_f_ref = achievement.c_f_ref
            c_s_ref = achievement.c_s_ref
            c_a_ref = achievement.c_a_ref
            game_dice = achievement.game_dice
            c_game_dice = achievement.c_game_dice
            win_lot_ = achievement.win_lot
            c_win_lot = achievement.c_win_lot
            game_mine = achievement.game_mine
            c_game_mine = achievement.c_game_mine


            cub = _("‚ûñ –ó—ñ–≥—Ä–∞—Ç–∏ –≤ '–∫—É–±–∏–∫' 50 —Ä–∞–∑")
            if game_dice >= 50:
                cub = _("‚úÖ –ó—ñ–≥—Ä–∞—Ç–∏ –≤ '–∫—É–±–∏–∫' 50 —Ä–∞–∑")

            mine = _("‚ûñ –ó—ñ–≥—Ä–∞—Ç–∏ –≤ '—Å–∞–ø–µ—Ä' 40 —Ä–∞–∑")
            if game_mine >= 40:
                mine = _("‚úÖ –ó—ñ–≥—Ä–∞—Ç–∏ –≤ '—Å–∞–ø–µ—Ä' 40 —Ä–∞–∑")

            f = _("‚ûñ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤ –ø–µ—Ä—à–æ–≥–æ —Ä—ñ–≤–Ω—è")
            if await db_commands.count_first_ref(message.from_user.id) >= 35:
                f = _("‚úÖ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤ –ø–µ—Ä—à–æ–≥–æ —Ä—ñ–≤–Ω—è")

            s = _("‚ûñ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤ –¥—Ä—É–≥–æ–≥–æ —Ä—ñ–≤–Ω—è")
            if await db_commands.count_second_ref(message.from_user.id) >= 15:
                s = _("‚úÖ –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤ –¥—Ä—É–≥–æ–≥–æ —Ä—ñ–≤–Ω—è")

            a = _("‚ûñ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤")
            if (await db_commands.count_first_ref(message.from_user.id) + await db_commands.count_second_ref(message.from_user.id) + await db_commands.count_third_ref(message.from_user.id)) >= 50:
                a = _("‚úÖ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤")

            day = _("‚ûñ –û—Ç—Ä–∏–º–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –±–æ–Ω—É—Å 30 —Ä–∞–∑")
            if daily_bonus >= 30:
                day = _("‚úÖ –û—Ç—Ä–∏–º–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –±–æ–Ω—É—Å 30 —Ä–∞–∑")

            pay = _("‚ûñ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ 250 TRX")
            if pay_trx >= 250:
                pay = _("‚úÖ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ 250 TRX")

            pay_th = _("‚ûñ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ 1000 TRX")
            if pay_trx_th >= 1000:
                pay_th = _("‚úÖ –ü–æ–ø–æ–≤–Ω–∏—Ç–∏ 1000 TRX")

            win_lot = _("‚ûñ –í–∏–≥—Ä–∞—Ç–∏ –ª–æ—Ç–µ—Ä–µ—é 2 —Ä–∞–∑–∏")
            if win_lot_ >= 2:
                win_lot = _("‚úÖ –í–∏–≥—Ä–∞—Ç–∏ –ª–æ—Ç–µ—Ä–µ—é 2 —Ä–∞–∑–∏")

            await bot.send_message(message.from_user.id, text=_("üèÖ –í–∏–∫–æ–Ω—É–π—Ç–µ –∑–∞–≤–¥–∞–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º—É–π—Ç–µ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É –∑–∞ –≤–∞—à—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è üé´\n\nüìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—è–≥–Ω–µ–Ω—å:\n\n\n{}: <b><i>{}/50</i></b>  \nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 3.5 TRX\n\n{}: <b><i>{}/40</i></b>  \nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 4 TRX\n\n{}: <b><i>{}/30</i></b>\nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 2.5 TRX\n\n{}: <b><i>{}/35</i></b>\nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 6.5 TRX\n\n{}: <b><i>{}/15</i></b>\nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 3.5 TRX\n\n{}: <b><i>{}/50</i></b>\nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 10 TRX\n\n{}: <b><i>{}/2</i></b>\nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 17.5 TRX\n\n{}: <b><i>{}/250</i></b>\nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 5 TRX\n\n{}: <b><i>{}/1000</i></b>\nüèÜ –í–∏–Ω–∞–≥–æ—Ä–æ–¥–∞: 25 TRX").format(cub, game_dice, mine, game_mine, day, daily_bonus, f, await db_commands.count_first_ref(message.from_user.id), s, await db_commands.count_second_ref(message.from_user.id), a, await db_commands.count_first_ref(message.from_user.id) + await db_commands.count_second_ref(message.from_user.id) + await db_commands.count_third_ref(message.from_user.id), win_lot, win_lot_, pay, pay_trx, pay_th, pay_trx_th), parse_mode='html')

            if daily_bonus >= 30:
                if c_daily_bonus != 1:
                    await db_commands.give_achivement_day(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–û—Ç—Ä–∏–º–∞—Ç–∏ —â–æ–¥–µ–Ω–Ω–∏–π –±–æ–Ω—É—Å 30 —Ä–∞–∑"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 2.5 TRX</b> ‚öú'), parse_mode='html')
            if pay_trx >= 250:
                if c_pay_trx != 1:
                    await db_commands.give_achivement_pay(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–ü–æ–ø–æ–≤–Ω–∏—Ç–∏ 250 TRX"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 5 TRX</b> ‚öú'), parse_mode='html')
            if pay_trx_th >= 1000:
                if c_pay_trx_th != 1:
                    await db_commands.give_achivement_pay_th(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–ü–æ–ø–æ–≤–Ω–∏—Ç–∏ 1000 TRX"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 25 TRX</b> ‚öú'), parse_mode='html')
            if await db_commands.count_first_ref(message.from_user.id) >= 35:
                if c_f_ref != 1:
                    await db_commands.give_achivement_f(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤ –ø–µ—Ä—à–æ–≥–æ —Ä—ñ–≤–Ω—è"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 6.5 TRX</b> ‚öú'), parse_mode='html')
            if await db_commands.count_second_ref(message.from_user.id) >= 15:
                if c_s_ref != 1:
                    await db_commands.give_achivement_s(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤ –¥—Ä—É–≥–æ–≥–æ —Ä—ñ–≤–Ω—è"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 3.5 TRX</b> ‚öú'), parse_mode='html')
            if (await db_commands.count_first_ref(message.from_user.id) + await db_commands.count_second_ref(message.from_user.id) + await db_commands.count_third_ref(message.from_user.id)) >= 50:
                if c_a_ref != 1:
                    await db_commands.give_achivement_a(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 10 TRX</b> ‚öú'), parse_mode='html')
            if game_dice >= 50:
                if c_game_dice != 1:
                    await db_commands.give_achivement_cub(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–ó—ñ–≥—Ä–∞—Ç–∏ –≤ –∫—É–±–∏–∫ 50 —Ä–∞–∑"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 3.5 TRX</b> ‚öú'), parse_mode='html')
            if win_lot_ >= 2:
                if c_win_lot != 1:
                    await db_commands.give_achivement_win_lot(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–í–∏–≥—Ä–∞—Ç–∏ –ª–æ—Ç–µ—Ä–µ—é 2 —Ä–∞–∑–∏"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 17.5 TRX</b> ‚öú'), parse_mode='html')
            if game_mine >= 40:
                if c_game_mine != 1:
                    await db_commands.give_achivement_miner(message.from_user.id)
                    await bot.send_message(message.chat.id, _('üìØ <b>–í—ñ—Ç–∞—é! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è <i><u>"–ó—ñ–≥—Ä–∞—Ç–∏ –≤ c–∞–ø–µ—Ä 40 —Ä–∞–∑"</u></i>. –í–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ 4 TRX</b> ‚öú'), parse_mode='html')



        else:
            await bot.send_message(message.from_user.id, _("‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞!\n\n–í–∏ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–ø—Ä—è–º—É –≤ —á–∞—Ç –±–æ—Ç–∞, –∞–±–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–µ–Ω—é –±—É–ª–∞ –∑–º—ñ–Ω–µ–Ω–∞ –ê–¥–º—ñ–Ω–æ–º.\n\n‚Ñπ  –ù–µ –≤—ñ–¥–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø—Ä—è–º–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –±–æ—Ç—É –∞–±–æ –æ–±–Ω–æ–≤—ñ—Ç—å –ú–µ–Ω—é, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start"), parse_mode='html')



    else:
        await message.answer(_('‚ùó –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –ó–ê–ë–ê–ù–ï–ù–û !\n\nüí≠ –Ø–∫—â–æ –≤–∏–Ω–∏–∫–ª–∏ —è–∫—ñ—Å—å –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å —É —Ç–µ—Ö.–ø—ñ–¥—Ç—Ä–∏–º–∫—É: @Christooo1'), reply_markup=types.ReplyKeyboardRemove())

#######################################################################################################################################



#######################################################################################################################################

@dp.message_handler(state='*', commands='cancel')
async def cancel_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    markup_games = await kb.markup_games(message)
    await message.answer(_("‚ùå –í–∏ –≤–∏–π—à–ª–∏ ‚Äº"), reply_markup=markup_games)


@dp.message_handler(state='*', commands='cancel_promo_code')
async def cancel_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    markup_start = await kb.markup_start(message)
    await message.answer(_("‚ùå –í–∏ –≤–∏–π—à–ª–∏ –∑ –≤–≤–µ–¥–µ–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—É ‚Äº"), reply_markup=markup_start)

#######################################################################################################################################






